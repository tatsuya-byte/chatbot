/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { OperationSpec } from '@azure/core-client';
import { PipelineRequest } from '@azure/core-rest-pipeline';
import { ServiceCallback, ServiceClientCredentials, ServiceClientOptions, OperationArguments, HttpOperationResponse, RestResponse } from './compat';
/**
 * Compat implementation between @azure/core-http and @azure/core-client.
 */
export declare class ServiceClientContext {
    /**
     * If specified, this is the base URI that requests will be made against for this ServiceClient.
     * If it is not specified, then all OperationSpecs must contain a baseUrl property.
     */
    protected baseUri?: string;
    /**
     * The default request content type for the service.
     * Used if no requestContentType is present on an OperationSpec.
     */
    protected requestContentType?: string;
    private options;
    private client;
    private readonly _requestPolicyFactories;
    credentials: ServiceClientCredentials;
    protected toJSON(): unknown;
    /**
     * Initializes a new instance of the ConnectorClientContext class.
     *
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param [options] The parameter options
     */
    constructor(credentials: ServiceClientCredentials, options?: ServiceClientOptions);
    /**
     * Send the provided httpRequest.
     *
     * @param request The HTTP request to send.
     * @returns The HTTP response.
     */
    sendRequest(request: PipelineRequest): Promise<HttpOperationResponse>;
    /**
     * Send an HTTP request that is populated using the provided OperationSpec.
     *
     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.
     * @param operationSpec - The OperationSpec to use to populate the httpRequest.
     * @param callback - The callback to call when the response is received.
     * @returns The response object.
     */
    sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>): Promise<RestResponse>;
    private addRequestSettings;
    private addPolicies;
}
//# sourceMappingURL=serviceClientContext.d.ts.map
