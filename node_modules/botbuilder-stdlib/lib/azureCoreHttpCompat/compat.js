"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Constants = exports.createWebResource = exports.createSerializer = exports.isTokenCredential = exports.HttpHeaders = void 0;
__exportStar(require("./interfaces"), exports);
// Re-export. Can't access the HttpHeaders directly from the @azure/core-http-compat package because it is not defined in the package.json 'exports' property.
var util_1 = require("./util");
Object.defineProperty(exports, "HttpHeaders", { enumerable: true, get: function () { return util_1.HttpHeaders; } });
// Re-export only TokenCredential, isTokenCredential as they are the same as the deprecated core-http library.
var core_auth_1 = require("@azure/core-auth");
Object.defineProperty(exports, "isTokenCredential", { enumerable: true, get: function () { return core_auth_1.isTokenCredential; } });
// Re-export these as they are the same as the deprecated core-http library.
var core_client_1 = require("@azure/core-client");
Object.defineProperty(exports, "createSerializer", { enumerable: true, get: function () { return core_client_1.createSerializer; } });
const core_rest_pipeline_1 = require("@azure/core-rest-pipeline");
const util_2 = require("./util");
/**
 * Creates a new WebResourceLike object from the provided resource.
 *
 * @param resource The resource to convert to a WebResourceLike object.
 * @returns A new WebResourceLike object.
 */
function createWebResource(resource) {
    return (0, util_2.toWebResourceLike)((0, core_rest_pipeline_1.createPipelineRequest)(resource !== null && resource !== void 0 ? resource : { url: '' }));
}
exports.createWebResource = createWebResource;
/**
 * A set of constants used internally when processing requests.
 */
exports.Constants = {
    /**
     * Defines constants for use with HTTP headers.
     */
    HeaderConstants: {
        /**
         * The Authorization header.
         */
        AUTHORIZATION: 'Authorization',
        AUTHORIZATION_SCHEME: 'Bearer',
    },
};
//# sourceMappingURL=compat.js.map